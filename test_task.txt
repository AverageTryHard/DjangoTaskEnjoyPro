Реализовать на Django Rest Framework RESTful API, позволяющее:

(V) - Осуществлять create, read, delete операции с сообщениями
(V) - Проставлять флаг "прочитано" сообщению
(V) - Генерация csv-файла из всех сообщений или из ограниченного количества по параметрам фильтрации (на свое усмотрение). Формат: идентификатор, заголовок, тело, флаг отправки, флаг прочтения, датавремя создания. Сортировка в порядке создания.

(P) При создании сообщения запускать celery задачу, которая проставит сообщению флаг "отправлено" (имитация отправки в сторонний сервис).
(V) Ограничить количество допустимых запросов на создание сообщения в 10 запросов в минуту.
(V) При превышении лимита отставать соответствующее сообщение со статусом 429 и писать лог в файл с информацией о запросе и клиенте.
(-) По желанию банить запросы на создание с IP-адреса на 10 минут.


(V) Структура сообщения (перечислены только критичные поля):
- заголовок
- тело сообщения
- флаг отправки
- флаг прочтения
- датавремя создания
- датавремя обновления

Ограничения:
- PEP8
(V) - Аннотация типов (очень желательно)
(V) - Необходимо использовать Django Rest Framework
(SQLite) - По СУБД ограничений нет. Можно даже SQLite
( ) - Аутентификация с авторизацией - необязательно, по желанию
(P) - Брокер сообщений - любой. RabbitMQ будет плюсом
(P) - Тесты и документация - будут плюсом
(P) - Плюсом будет обернуть приложение в docker контейнер и использовать docker-compose для оркестрации